---
name: dzil build and test

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
#  schedule:
#    - cron: "15 4 * * 0" # Every Sunday morning
  workflow_dispatch:

jobs:
  build-job:
    name: Build distribution
    runs-on: ubuntu-latest
    container:
      image: perldocker/perl-tester:5.36
    steps:
      - uses: actions/checkout@v2
      - name: Set PAUSE identity
        run: |
          echo user JDDPAUSE > ~/.pause
          echo password WellWellComeOn >> ~/.pause
      - name: Run Tests
        env:
          AUTHOR_TESTING: 1
          AUTOMATED_TESTING: 1
          EXTENDED_TESTING: 1
          RELEASE_TESTING: 1
        run: |
          upgrade-perl-helpers
          cpan-install-build-deps
          build-dist
          cd build_dir
          cpan-install-dist-deps --with-configure --with-develop
          perl Makefile.PL
          make
          prove -br t xt
          make clean
      - uses: actions/upload-artifact@master
        with:
          name: build_dir
          path: build_dir

  list:
    needs:
      - build-job
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: list available perl versions on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: shogo82148/actions-setup-perl@v1
      - id: set-matrix
        name: list available perl versions
        shell: perl {0}
        run: |
          use Actions::Core;
          set_output(matrix => {perl => [perl_versions()]});
    outputs:
      matrix-${{ matrix.os }}: ${{ steps.set-matrix.outputs.matrix }}

  run-ubuntu-latest:
    runs-on: ubuntu-latest
    needs:
      - list
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list-ubuntu-latest.outputs.matrix)}}
    steps:
      - name: Set Up Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl-version }}
          distribution: strawberry # this option only used on Windows
      - uses: actions/download-artifact@master
        with:
          name: build_dir
          path: .
      - name: install deps using cpm
        uses: perl-actions/install-with-cpm@v1
        with:
          cpanfile: "cpanfile"
          args: "--with-suggests --with-configure --with-recommends --with-test"
      - run: |
          perl Makefile.PL
          make
          make test
        env:
          AUTHOR_TESTING: 1
          RELEASE_TESTING: 1

  run-macos-latest:
    runs-on: macos-latest
    needs:
      - list
      - build-job
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list-macos-latest.outputs.matrix)}}
    steps:
      - name: Set Up Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl-version }}
          distribution: strawberry # this option only used on Windows
      - uses: actions/download-artifact@master
        with:
          name: build_dir
          path: .
      - name: install deps using cpm
        uses: perl-actions/install-with-cpm@v1
        with:
          cpanfile: "cpanfile"
          args: "--with-suggests --with-configure --with-recommends --with-test"
      - run: |
          perl Makefile.PL
          make
          make test
        env:
          AUTHOR_TESTING: 1
          RELEASE_TESTING: 1

  run-windows-latest:
    runs-on: windows-latest
    needs:
      - list
      - build-job
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.list-windows-latest.outputs.matrix)}}
    steps:
      - name: Set Up Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl-version }}
          distribution: strawberry # this option only used on Windows
      - uses: actions/download-artifact@master
        with:
          name: build_dir
          path: .
      - name: install deps using cpm
        uses: perl-actions/install-with-cpm@v1
        with:
          cpanfile: "cpanfile"
          args: "--with-suggests --with-configure --with-recommends --with-test"
      - run: |
          perl Makefile.PL
          make
          make test
        env:
          AUTHOR_TESTING: 1
          RELEASE_TESTING: 1
